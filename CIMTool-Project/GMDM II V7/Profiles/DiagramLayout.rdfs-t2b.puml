@startuml
top to bottom direction
hide empty methods

' Here we adjust the horizontal spacing for better spatial rendering (the PlantUML default is ~20)
skinparam nodesep 20
' Here we adjust the vertical spacing for better spatial rendering (the PlantUML default is ~30)
skinparam ranksep 30

skinparam BackgroundColor #FFFFFF
skinparam shadowing false
skinparam RoundCorner 5
skinparam BorderColor #454645
skinparam ArrowColor #454645
skinparam FontColor #000000

skinparam class {
  ' Concrete classes style definition
  BackgroundColor #FFFFE0
  FontColor #000000
  AttributeFontColor #000000
  StereotypeFontColor #000000
  HeaderFontColor #000000
  BorderColor #454645
  BorderThickness 1
  
  ' Abstract classes style definition
  BackgroundColor<<abstract>> #D3D3D3
  FontColor<<abstract>> #000000
  AttributeFontColor<<abstract>> #000000
  StereotypeFontColor<<abstract>> #000000
  HeaderFontColor<<abstract>> #000000
  BorderColor<<abstract>> #454645
  BorderThickness<<abstract>> 1
  
  ' Enumerations style definition
  BackgroundColor<<enumeration>> #90EE90
  FontColor<<enumeration>> #000000
  AttributeFontColor<<enumeration>> #000000
  StereotypeFontColor<<enumeration>> #000000
  HeaderFontColor <<enumeration>> #000000
  BorderColor<<enumeration>> #454645
  BorderThickness<<enumeration>> 1
  
  ' CIMDatatypes style definition
  BackgroundColor<<CIMDatatype>> #FFEBCD
  FontColor<<CIMDatatype>> #000000
  AttributeFontColor<<CIMDatatype>> #000000
  StereotypeFontColor<<CIMDatatype>> #000000
  HeaderFontColor<<CIMDatatype>> #000000
  BorderColor<<CIMDatatype>> #454645
  BorderThickness<<CIMDatatype>> 1
  
  ' Compound classes style definition
  BackgroundColor<<Compound>> #FFEBCD
  FontColor<<Compound>> #000000
  AttributeFontColor<<Compound>> #000000
  StereotypeFontColor<<Compound>> #000000
  HeaderFontColor<<Compound>> #000000
  BorderColor<<Compound>> #454645
  BorderThickness<<Compound>> 1
  
  ' Primitive classes style definition
  BackgroundColor<<Primitive>> #E6E6FF
  FontColor<<Primitive>> #000000
  AttributeFontColor<<Primitive>> #000000
  StereotypeFontColor<<Primitive>> #000000
  HeaderFontColor<<Primitive>> #000000
  BorderColor<<Primitive>> #454645
  BorderThickness<<Primitive>> 1
  
  ' Errors classes style definition
  BackgroundColor<<error>> #FFC0CB
  FontColor<<error>> #000000
  AttributeFontColor<<error>> #000000
  StereotypeFontColor<<error>> #000000
  HeaderFontColor<<error>> #000000
  BorderColor<<error>> #454645
  BorderThickness<<error>> 1
}
skinparam shadowing true

hide <<abstract>> stereotype
hide <<error>> stereotype


skinparam note {
  BorderColor #454645
  BorderThickness 1.5
  FontSize 14
  Font Bold
  FontColor #000000
}
' Add a note towards the upper left corner of the diagram
note as DiagramLayoutNote #lightyellow
   Profile: DiagramLayout
   Namespace: http://www.ucaiug.org/gmdm_diagram_layout#
end note

' Diagram inherits from IdentifiedObject
class Diagram   {
   +orientation : OrientationKind [0..1]
   +x1InitialView : float [0..1]
   +x2InitialView : float [0..1]
   +y1InitialView : float [0..1]
   +y2InitialView : float [0..1]
}

IdentifiedObject <|-- Diagram
Diagram "+Diagram 0..*" --> "+DiagramStyle 0..1" DiagramStyle

' DiagramObject inherits from IdentifiedObject
class DiagramObject   {
   +drawingOrder : integer [0..1]
   +isPolygon : boolean [0..1]
   +offsetX : float [0..1]
   +offsetY : float [0..1]
   +rotation : AngleDegrees [0..1]
}

IdentifiedObject <|-- DiagramObject
DiagramObject "+DiagramElements 0..*" --> "+Diagram 1" Diagram
DiagramObject "+StyledObjects 0..*" --> "+DiagramObjectStyle 1" DiagramObjectStyle

' DiagramObjectGluePoint inherits from Identity
class DiagramObjectGluePoint   {
}

Identity <|-- DiagramObjectGluePoint
DiagramObjectGluePoint "+DiagramObjectGluePoint 0..1" --> "+DiagramObjectPoints 1..*" DiagramObjectPoint

' DiagramObjectPoint inherits from Identity
class DiagramObjectPoint   {
   +sequenceNumber : integer [0..1]
   +xPosition : float [1]
   +yPosition : float [1]
   +zPosition : float [0..1]
}

Identity <|-- DiagramObjectPoint
DiagramObjectPoint "+DiagramObjectPoints 0..*" --> "+DiagramObject 1" DiagramObject

' DiagramObjectStyle inherits from IdentifiedObject
class DiagramObjectStyle   {
}

IdentifiedObject <|-- DiagramObjectStyle

' DiagramStyle inherits from IdentifiedObject
class DiagramStyle   {
}

IdentifiedObject <|-- DiagramStyle

' IdentifiedObject inherits from Identity
abstract class IdentifiedObject  <<abstract>> {
   +mRID : string [1]
   +description : string [0..1]
}

Identity <|-- IdentifiedObject
IdentifiedObject "+IdentifiedObject 0..1" --> "+name 0..*" Name

' Identity
abstract class Identity  <<abstract>> {
   +identifier : string [1]
}


' Name
abstract class Name <<Attribute>> <<abstract>> {
}


' Enumeration OrientationKind
enum OrientationKind <<enumeration>><<Attribute>>  {
   negative
   positive
}

' TextDiagramObject inherits from DiagramObject
class TextDiagramObject   {
   +text : string [1]
}

DiagramObject <|-- TextDiagramObject

' VisibilityLayer inherits from IdentifiedObject
class VisibilityLayer   {
   +drawingOrder : integer [0..1]
}

IdentifiedObject <|-- VisibilityLayer
VisibilityLayer "+VisibilityLayers 0..*" --> "+VisibleObjects 0..*" DiagramObject

@enduml
